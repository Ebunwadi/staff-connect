// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String            @unique
  password        String
  gender          String
  job_role        String
  department      String
  address         String
  is_admin        Boolean
  gifs            Gifs[]
  gifs_comment    Gif_comment[]
  article_comment Article_comment[]
  article         Articles[]
}

model Gifs {
  id           Int           @id @default(autoincrement())
  title        String
  image_url    String
  public_id    String
  created_at   DateTime      @default(now())
  is_flagged   Boolean       @default(false)
  user_id      Int
  user         User          @relation(fields: [user_id], references: [id])
  gifs_comment Gif_comment[]
}

model Gif_comment {
  id         Int      @id @default(autoincrement())
  comments   String
  gif_id     Int
  gif        Gifs     @relation(fields: [gif_id], references: [id])
  created_at DateTime @default(now())
  is_flagged Boolean  @default(false)
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
}

model Category {
  id            Int        @id @default(autoincrement())
  category_name String     @unique
  articles      Articles[]
}

model Articles {
  id              Int               @id @default(autoincrement())
  title           String
  article         String
  is_flagged      Boolean           @default(false)
  created_at      DateTime          @default(now())
  category_name   String
  category        Category          @relation(fields: [category_name], references: [category_name])
  user_id         Int
  user            User              @relation(fields: [user_id], references: [id])
  article_comment Article_comment[]
}

model Article_comment {
  id         Int      @id @default(autoincrement())
  comments   String
  article_id Int
  article    Articles @relation(fields: [article_id], references: [id])
  created_at DateTime @default(now())
  is_flagged Boolean  @default(false)
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
}
